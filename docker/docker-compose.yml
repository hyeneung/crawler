services:
  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: crawl_data
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    volumes:
      # docker-entrypoint-initdb.d로 init 파일 이동
      - ../db/init_db.sql:/docker-entrypoint-initdb.d/init.sql
      - ../db/data:/var/lib/mysql
    healthcheck: # mysqladdmin에 성공적으로 연결되면 crawler 서비스 실행
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
      interval: 5s
      timeout: 2s
      retries: 10

  db-handler:
    image: db-handler:1.0
    environment:
      - DB_USER=root
      - DB_PASS=1234
      - DB_HOST=db
      - DB_PORT=3306 # db container의 외부 포트로 들어가지 않음. 같은 네트워크.
      - DB_NAME=crawl_data # init_db.sql 참고
    volumes: # 기준 : docker compose 파일 있는 곳
      - ../db:/usr/src/app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/bin/grpc_health_probe", "-addr=:50051"]
      interval: 5s
      timeout: 2s
      retries: 10
    working_dir: /usr/src/app
    command: bash -c "execute_db_handler"  # 빌드 파일. Dockerfile 참고

  crawler:
    image: crawler:1.0
    depends_on:
      db-handler:
        condition: service_healthy
    environment: 
      # https://github.com/grpc/grpc/blob/master/doc/naming.md
      - GRPC_SERVER_ADDRESS=dns:db-handler:50051
    volumes:
      - ../crawler:/usr/src/app
    working_dir: /usr/src/app
    command: bash -c "execute_crawler"
volumes:
  db:
    driver: local